{"Build A Wall":"javascript:t=document.title;document.title=\"Loading...\";r=new XMLHttpRequest();r.onload=function(e){eval(e.currentTarget.responseText)};r.open(\"GET\",\"https:\/\/plainsightcollection.github.io\/web\/wallball\/ldr.js\",true);r.send();undefined;","Dodgy Square":"javascript:alert(\"--DODGYSQUARE--rules: use the left and right arrow keys, to dodge the red squares. the red squares get really fast, so be careful!\"); var xpos=80; var ypos=350; var enemyxpos=0; var enemyypos=-120; var enemyspeed=2.5; var playerspeed=4; var scorecount=0; var left=0; var right=0; (function () { var bg = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(bg); bg.style.position = 'fixed'; bg.style.top = '0px'; bg.style.left = '0px'; bg.style.margin = '0px'; bg.style.paddingTop = '10px'; bg.style.width = '300px'; bg.style.height = '500px'; bg.style.zIndex = 10000; bg.style.opacity = 1; bg.style.color = 'white'; bg.style.backgroundColor = 'black'; bg.style.border = '0px solid white'; bg.style.textAlign = 'center'; bg.id = 'bg'; bg.style.display = 'block'; bg.innerText = ''; }()); (function () { var me = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(me); me.style.position = 'fixed'; me.style.top = '535px'; me.style.left = '0px'; me.style.margin = '0px'; me.style.paddingTop = '5px'; me.style.width = '300px'; me.style.height = '35px'; me.style.zIndex = 10000; me.style.opacity = 1; me.style.color = 'black'; me.style.backgroundColor = 'white'; me.style.border = '4px solid black'; me.style.textAlign = 'center'; me.id = 'me'; me.style.display = 'block'; me.innerText = 'by dragonmaster73101'; document.getElementById('me').addEventListener('click',function(){ window.open('https:\/\/github.com\/dragon731012'); }); }()); (function () { var score = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(score); score.style.position = 'fixed'; score.style.top = '500px'; score.style.left = '0px'; score.style.margin = '0px'; score.style.paddingTop = '5px'; score.style.width = '300px'; score.style.height = '35px'; score.style.zIndex = 10000; score.style.opacity = 1; score.style.color = 'black'; score.style.backgroundColor = 'white'; score.style.border = '4px solid black'; score.style.textAlign = 'center'; score.id = 'score'; score.style.display = 'block'; score.innerText = 'score: '+scorecount+''; }()); (function () { var you = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(you); you.style.position = 'fixed'; you.style.top = ''+ypos+'px'; you.style.left = ''+xpos+'px'; you.style.margin = '0px'; you.style.paddingTop = '10px'; you.style.width = '70px'; you.style.height = '120px'; you.style.zIndex = 10000; you.style.opacity = 1; you.style.color = 'blue'; you.style.backgroundColor = 'blue'; you.style.border = '0px solid white'; you.style.textAlign = 'center'; you.id = 'you'; you.style.display = 'block'; you.innerText = ''; function mover(){ if (left==1){ if (xpos-12>=0){ xpos=xpos-playerspeed; you.style.left = ''+xpos+'px'; } } if (right==1){ if (xpos+10<=230){ xpos=xpos+playerspeed; you.style.left = ''+xpos+'px'; } } } setInterval(mover,5); window.addEventListener(\"keydown\",function(event){ if(event.key==\"ArrowLeft\"){ left=1; } }); window.addEventListener(\"keyup\",function(event){ if(event.key==\"ArrowLeft\"){ left=0; } }); window.addEventListener(\"keydown\",function(event){ if(event.key==\"ArrowRight\"){ right=1; } }); window.addEventListener(\"keyup\",function(event){ if(event.key==\"ArrowRight\"){ right=0; } }); }()); function makeenemy(){ (function () { var enemy = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(enemy); enemyxpos=Math.floor(Math.random()*(230-0+1)+0); enemyypos=-120; enemy.style.position = 'fixed'; enemy.style.top = ''+enemyypos+'px'; enemy.style.left = ''+enemyxpos+'px'; enemy.style.margin = '0px'; enemy.style.paddingTop = '10px'; enemy.style.width = '70px'; enemy.style.height = '120px'; enemy.style.zIndex = 10000; enemy.style.opacity = 1; enemy.style.color = 'red'; enemy.style.backgroundColor = 'red'; enemy.style.border = '0px solid white'; enemy.style.textAlign = 'center'; enemy.id = 'enemy'; enemy.style.display = 'block'; enemy.innerText = ''; function enemymove(){ enemyypos=enemyypos+enemyspeed; enemy.style.top = ''+enemyypos+'px'; if (enemyypos>380){ enemy.parentNode.removeChild(enemy); scorecount=scorecount+1; score.innerText = 'score: '+scorecount+''; makeenemy(); } } setInterval(enemymove,50); }()); } makeenemy(); function colliding() { if (xpos < enemyxpos + 70 && xpos + 70 > enemyxpos && ypos < enemyypos + 120 && ypos + 120 > enemyypos) { clearInterval(colliding); document.getElementById(\"enemy\"); enemy.parentNode.removeChild(enemy); document.getElementById(\"you\"); you.parentNode.removeChild(you); document.getElementById(\"bg\"); bg.parentNode.removeChild(bg); document.getElementById(\"score\"); score.parentNode.removeChild(score); document.getElementById(\"me\"); me.parentNode.removeChild(me); alert(\"game over. your score was \"+scorecount+\".\"); } } setInterval(colliding,5); ","Minesweeper":"javascript:(function () { class Cell { constructor(row, col, board) { this.row = row; this.col = col; this.bomb = false; this.board = board; this.revealed = false; this.flagged = false; this.adjBombs = 0; } getAdjCells() { var cells = []; var lastRow = this.board.length - 1; var lastCol = this.board[0].length - 1; if (this.row > 0 && this.col > 0) cells.push(this.board[this.row - 1][this.col - 1]); if (this.row > 0) cells.push(this.board[this.row - 1][this.col]); if (this.row > 0 && this.col < lastCol) cells.push(this.board[this.row - 1][this.col + 1]); if (this.col < lastCol) cells.push(this.board[this.row][this.col + 1]); if (this.row < lastRow && this.col < lastCol) cells.push(this.board[this.row + 1][this.col + 1]); if (this.row < lastRow) cells.push(this.board[this.row + 1][this.col]); if (this.row < lastRow && this.col > 0) cells.push(this.board[this.row + 1][this.col - 1]); if (this.col > 0) cells.push(this.board[this.row][this.col - 1]); return cells; } calcAdjBombs() { var adjCells = this.getAdjCells(); this.adjBombs = adjCells.reduce((count, cell) => count + (cell.bomb ? 1 : 0), 0); } flag() { if (!this.revealed) { this.flagged = !this.flagged; return this.flagged; } return false; } reveal() { if (this.revealed) return false; this.revealed = true; if (this.bomb) return true; if (this.adjBombs === 0) { this.getAdjCells().forEach(cell => { if (!cell.revealed) cell.reveal(); }); } return false; } } var levels = { easy: { size: 9, bombs: 10 }, mid: { size: 16, bombs: 40 }, hard: { size: 30, bombs: 160 } }; var currentLevel = levels.mid; var boardSize = currentLevel.size; var timerId, hitBomb, board, timer, bombCounter; var createBoard = () => { var table = document.createElement('table'); table.id = 'board'; table.style.borderCollapse = 'collapse'; table.style.margin = 'auto'; table.style.position = 'fixed'; table.style.top = '50%'; table.style.left = '50%'; table.style.transform = 'translate(-50%, -50%)'; table.style.backgroundColor = '#333'; table.style.padding = '10px'; table.style.border = '2px solid #666'; table.style.zIndex = '10000'; document.body.appendChild(table); return table; }; var initGame = (level) => { currentLevel = levels[level] || currentLevel; boardSize = currentLevel.size; clearInterval(timerId); board.innerHTML = ''; var header = document.createElement('tr'); var headerCell = document.createElement('td'); headerCell.colSpan = boardSize; headerCell.style.textAlign = 'center'; headerCell.style.background = '#ccc'; headerCell.style.color = '#000'; var statusBar = document.createElement('div'); statusBar.id = 'status-bar'; bombCounter = document.createElement('span'); bombCounter.id = 'bomb-counter'; bombCounter.textContent = currentLevel.bombs.toString().padStart(3, '0'); timer = document.createElement('span'); timer.id = 'timer'; timer.textContent = '000'; var resetButton = document.createElement('button'); resetButton.id = 'reset'; resetButton.textContent = 'üòê'; statusBar.appendChild(bombCounter); statusBar.appendChild(timer); statusBar.appendChild(resetButton); headerCell.appendChild(statusBar); header.appendChild(headerCell); board.appendChild(header); for (var i = 0; i < boardSize; i++) { var row = document.createElement('tr'); for (var j = 0; j < boardSize; j++) { var cell = document.createElement('td'); cell.classList.add('game-cell'); cell.style.width = '20px'; cell.style.height = '20px'; cell.style.border = '1px solid #000'; cell.style.background = '#aaa'; cell.setAttribute('data-row', i); cell.setAttribute('data-col', j); row.appendChild(cell); } board.appendChild(row); } setupBoard(); addEventListeners(); startTimer(); }; var setupBoard = () => { boardArray = Array(boardSize).fill(null).map(() => Array(boardSize).fill(null)); for (var i = 0; i < boardSize; i++) { for (var j = 0; j < boardSize; j++) { boardArray[i][j] = new Cell(i, j, boardArray); } } var bombsToPlace = currentLevel.bombs; while (bombsToPlace > 0) { var row = Math.floor(Math.random() * boardSize); var col = Math.floor(Math.random() * boardSize); if (!boardArray[row][col].bomb) { boardArray[row][col].bomb = true; bombsToPlace--; } } boardArray.forEach(row => row.forEach(cell => cell.calcAdjBombs())); }; var addEventListeners = () => { board.addEventListener('click', handleCellClick); board.addEventListener('contextmenu', handleCellRightClick); document.getElementById('reset').addEventListener('click', resetGame); document.addEventListener('keydown', handleKeyPress); }; var handleCellClick = (event) => { var target = event.target; if (target.tagName === 'TD' && !hitBomb) { var row = parseInt(target.getAttribute('data-row')); var col = parseInt(target.getAttribute('data-col')); hitBomb = boardArray[row][col].reveal(); if (hitBomb) { document.getElementById('reset').textContent = 'üòû'; } else if (checkWin()) { document.getElementById('reset').textContent = 'üòÅ'; } updateBoard(); } }; var handleCellRightClick = (event) => { event.preventDefault(); var target = event.target; if (target.tagName === 'TD') { var row = parseInt(target.getAttribute('data-row')); var col = parseInt(target.getAttribute('data-col')); boardArray[row][col].flag(); updateBoard(); } }; var handleKeyPress = (event) => { if (event.key === '1') { initGame('easy'); } else if (event.key === '2') { initGame('mid'); } else if (event.key === '3') { initGame('hard'); } else if (event.key === '\/') { toggleBoardVisibility(); } }; var toggleBoardVisibility = () => { var boardElement = document.getElementById('board'); if (boardElement.style.display === 'none') { boardElement.style.display = ''; } else { boardElement.style.display = 'none'; } }; var updateBoard = () => { var colors = [\"#0000FA\", \"#4B802D\", \"#DB1300\", \"#202081\", \"#690400\", \"#457A7A\", \"#1B1B1B\", \"#7A7A7A\"]; Array.from(document.querySelectorAll('td.game-cell')).forEach(cell => { var row = parseInt(cell.getAttribute('data-row')); var col = parseInt(cell.getAttribute('data-col')); var boardCell = boardArray[row][col]; if (boardCell.revealed) { cell.style.background = '#ddd'; if (boardCell.bomb) { cell.style.background = 'red'; } else if (boardCell.adjBombs > 0) { cell.textContent = boardCell.adjBombs; cell.style.color = colors[boardCell.adjBombs - 1]; } } else if (boardCell.flagged) { cell.textContent = 'üö©'; } else { cell.textContent = ''; } }); }; var resetGame = () => { clearInterval(timerId); timerId = null; hitBomb = false; document.getElementById('reset').textContent = 'üòê'; initGame(currentLevel); }; var startTimer = () => { var time = 0; timerId = setInterval(() => { time += 1; timer.textContent = time.toString().padStart(3, '0'); }, 1000); }; var checkWin = () => { return boardArray.every(row => row.every(cell => (cell.bomb && !cell.revealed) || (!cell.bomb && cell.revealed))); }; var board = document.getElementById('board') || createBoard(); initGame('mid'); })();   ","Disco!":"javascript:(function() {     var discoInterval = null;     var colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"pink\"];        function startDisco() {       discoInterval = setInterval(function() {         var color = colors[Math.floor(Math.random() * colors.length)];         var elements = document.querySelectorAll(\"*\");         for (var i = 0; i < elements.length; i++) {           elements[i].style.backgroundColor = color;         }       }, 100);     }        function stopDisco() {       clearInterval(discoInterval);       var elements = document.querySelectorAll(\"*\");       for (var i = 0; i < elements.length; i++) {         elements[i].style.backgroundColor = \"\";       }     }        if (discoInterval) {       stopDisco();     } else {       startDisco();     }   })();   ","3d Page":"javascript:(function(){var js=document.body.appendChild(document.createElement(\"script\"));js.onerror=function(){alert(\"Error! The Script Could Not Be Loaded!\")};js.src=\"https:\/\/rawgit.com\/Krazete\/bookmarklets\/master\/tri.js\"})();","RPS":"javascript:var choices=['Rock','Paper','Scissors'];var x=0;alert(\"by AnantMishra01 on GitHub\\nGitHub Profile: https:\/\/github.com\/AnantMishra01\");alert(\"--ROCK PAPER SCISSORS-- rules: choose rock, paper, or scissors.\");function getRandomChoice(){return choices[Math.floor(Math.random()*choices.length)];};for(var i=1;i<=5;i++){var playerChoice=prompt(\"Round \"+i+\"\/5: Please choose rock, paper, or scissors\");var computerChoice=getRandomChoice();if(playerChoice===null){break;}else if(!choices.includes(playerChoice)){alert(\"Invalid selection. Please choose rock, paper, or scissors.\");}else{if(playerChoice===computerChoice){alert(\"It's a tie!\");}else if((playerChoice==='rock'&&computerChoice==='scissors')||(playerChoice==='paper'&&computerChoice==='rock')||(playerChoice==='scissors'&&computerChoice==='paper')){x+=1;alert(\"You win!\");}else{x+=1;alert(\"Computer wins!\");}console.log(\"Player: \"+playerChoice);console.log(\"Computer: \"+computerChoice);console.log(\"-----------------\");}}alert(\"Game over! You played \"+x+\" rounds.\");","Breakout":"javascript:alert(\"--BREAKOUT-- hit the ball to break all the blocks! speeds up every time you break all of them! by dragonmaster73101 a school student who got bored\"); var width = window.innerWidth; var height = window.innerHeight; var ballxpos = 683; var ballypos = 200; var randomnum = Math.floor(Math.random() * (2 - 1 + 1) + 1); if (randomnum == 1) { var ballchangex = 1; } if (randomnum == 2) { var ballchangex = -1; } var ballchangey = 1; var ballspeed = 3; var xpos = 683; var ypos = window.innerHeight-100; var playerxmove = 0; var playerspeed = 5; var score = 0; var done = 0; var s1width = 180; var s1height = 40; var s1xpos = 1366 \/ 2; s1xpos = s1xpos - s1width \/ 2; var s1ypos = 10; var s2width = 180; var s2height = 40; var s2xpos = 1366 \/ 2; s2xpos = s2xpos - s2width \/ 2 + s2width + 10; var s2ypos = 10; var s3width = 180; var s3height = 40; var s3xpos = 1366 \/ 2; s3xpos = s3xpos - s3width \/ 2 - s3width - 10; var s3ypos = 10; var s4width = 180; var s4height = 40; var s4xpos = 1366 \/ 2; s4xpos = s4xpos - s4width \/ 2 - s4width - 10; var s4ypos = 10; s4ypos = s4ypos + s4height + 10; var s5width = 180; var s5height = 40; var s5xpos = 1366 \/ 2; s5xpos = s5xpos - s5width \/ 2 + s5width + 10; var s5ypos = 10; s5ypos = s5ypos + s5height + 10; var s6width = 180; var s6height = 40; var s6xpos = 1366 \/ 2; s6xpos = s6xpos - s6width \/ 2; var s6ypos = 10; s6ypos = s6ypos + s6height + 10; var s7width = 180; var s7height = 40; var s7xpos = 1366 \/ 2; s7xpos = s7xpos - s7width \/ 2 - s7width - 10; var s7ypos = 10; s7ypos = s7ypos + s7height + s7height + 20; var s8width = 180; var s8height = 40; var s8xpos = 1366 \/ 2; s8xpos = s8xpos - s8width \/ 2 + s8width + 10; var s8ypos = 10; s8ypos = s8ypos + s8height + 10 + s8height + 10; var s9width = 180; var s9height = 40; var s9xpos = 1366 \/ 2; s9xpos = s9xpos - s9width \/ 2; var s9ypos = 10; s9ypos = s9ypos + s9height + 10 + s9height + 10; var s10width = 180; var s10height = 40; var s10xpos = 1366 \/ 2; s10xpos = s10xpos - s10width \/ 2 - s10width - 10; var s10ypos = 10; s10ypos = s10ypos + s10height + s10height + s10height + 30; var s11width = 180; var s11height = 40; var s11xpos = 1366 \/ 2; s11xpos = s11xpos - s11width \/ 2 + s11width + 10; var s11ypos = 10; s11ypos = s11ypos + s11height + 10 + s11height + 10 + s11height + 10; var s12width = 180; var s12height = 40; var s12xpos = 1366 \/ 2; s12xpos = s12xpos - s12width \/ 2; var s12ypos = 10; s12ypos = s12ypos + s12height + 10 + s12height + 10 + s12height + 10; (function() { var me = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(me); me.style.position = 'fixed'; me.style.bottom = '0px'; me.style.right = '0px'; me.style.margin = '0px'; me.style.paddingTop = '0px'; me.style.width = '' + width + 'px'; me.style.height = '20px'; me.style.zIndex = 10000; me.style.opacity = 0.8; me.style.color = 'white'; me.style.backgroundColor = 'black'; me.style.border = '0px solid black'; me.style.textAlign = 'center'; me.style.cursor = 'pointer'; me.id = 'me'; me.style.display = 'circle'; me.innerText = 'by dragonmaster73101'; document.getElementById('me').addEventListener('click', function() { window.open('https:\/\/github.com\/dragon731012'); }); }()); (function() { var you = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(you); you.style.position = 'fixed'; you.style.top = '' + ypos + 'px'; you.style.left = '' + xpos + 'px'; you.style.margin = '0px'; you.style.width = '200px'; you.style.height = '30px'; you.style.zIndex = 10000; you.style.opacity = 1; you.style.color = 'black'; you.style.backgroundColor = 'white'; you.style.border = '2px solid black'; you.style.textAlign = 'center'; you.id = 'you'; you.style.display = 'block'; }()); (function() { var ball = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(ball); ball.style.position = 'fixed'; ball.style.top = '' + ballypos + 'px'; ball.style.left = '' + ballxpos + 'px'; ball.style.margin = '0px'; ball.style.width = '50px'; ball.style.height = '50px'; ball.style.zIndex = 10000; ball.style.opacity = 1; ball.style.color = 'black'; ball.style.backgroundColor = 'white'; ball.style.border = '2px solid black'; ball.style.textAlign = 'center'; ball.id = 'ball'; ball.style.display = 'block'; }()); (function() { var scorer = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(scorer); scorer.style.position = 'fixed'; scorer.style.top = '10px'; scorer.style.left = '10px'; scorer.style.margin = '0px'; scorer.style.width = '100px'; scorer.style.height = '40px'; scorer.style.zIndex = 10000; scorer.style.opacity = 1; scorer.style.color = 'black'; scorer.style.backgroundColor = 'white'; scorer.style.paddingTop = '5px'; scorer.style.border = '3px solid black'; scorer.style.textAlign = 'center'; scorer.id = 'scorer'; scorer.style.display = 'block'; scorer.innerText = 'score: ' + score + ''; }()); function start() { ballspeed = ballspeed + 0.3; playerspeed = playerspeed + 0.3; s1width = 180; s1height = 40; s1xpos = 1366 \/ 2; s1xpos = s1xpos - s1width \/ 2; s1ypos = 10; s2width = 180; s2height = 40; s2xpos = 1366 \/ 2; s2xpos = s2xpos - s2width \/ 2 + s2width + 10; s2ypos = 10; s3width = 180; s3height = 40; s3xpos = 1366 \/ 2; s3xpos = s3xpos - s3width \/ 2 - s3width - 10; s3ypos = 10; s4width = 180; s4height = 40; s4xpos = 1366 \/ 2; s4xpos = s4xpos - s4width \/ 2 - s4width - 10; s4ypos = 10; s4ypos = s4ypos + s4height + 10; s5width = 180; s5height = 40; s5xpos = 1366 \/ 2; s5xpos = s5xpos - s5width \/ 2 + s5width + 10; s5ypos = 10; s5ypos = s5ypos + s5height + 10; s6width = 180; s6height = 40; s6xpos = 1366 \/ 2; s6xpos = s6xpos - s6width \/ 2; s6ypos = 10; s6ypos = s6ypos + s6height + 10; s7width = 180; s7height = 40; s7xpos = 1366 \/ 2; s7xpos = s7xpos - s7width \/ 2 - s7width - 10; s7ypos = 10; s7ypos = s7ypos + s7height + s7height + 20; s8width = 180; s8height = 40; s8xpos = 1366 \/ 2; s8xpos = s8xpos - s8width \/ 2 + s8width + 10; s8ypos = 10; s8ypos = s8ypos + s8height + 10 + s8height + 10; s9width = 180; s9height = 40; s9xpos = 1366 \/ 2; s9xpos = s9xpos - s9width \/ 2; s9ypos = 10; s9ypos = s9ypos + s9height + 10 + s9height + 10; s10width = 180; s10height = 40; s10xpos = 1366 \/ 2; s10xpos = s10xpos - s10width \/ 2 - s10width - 10; s10ypos = 10; s10ypos = s10ypos + s10height + s10height + s10height + 30; s11width = 180; s11height = 40; s11xpos = 1366 \/ 2; s11xpos = s11xpos - s11width \/ 2 + s11width + 10; s11ypos = 10; s11ypos = s11ypos + s11height + 10 + s11height + 10 + s11height + 10; s12width = 180; s12height = 40; s12xpos = 1366 \/ 2; s12xpos = s12xpos - s12width \/ 2; s12ypos = 10; s12ypos = s12ypos + s12height + 10 + s12height + 10 + s12height + 10; (function() { var s1 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s1); s1.style.position = 'fixed'; s1.style.top = '' + s1ypos + 'px'; s1.style.left = '' + s1xpos + 'px'; s1.style.margin = '0px'; s1.style.width = '' + s1width + 'px'; s1.style.height = '' + s1height + 'px'; s1.style.zIndex = 10000; s1.style.opacity = 1; s1.style.color = 'black'; s1.style.backgroundColor = 'green'; s1.style.paddingTop = '5px'; s1.style.border = '3px solid black'; s1.style.textAlign = 'center'; s1.id = 's1'; s1.style.display = 'block'; }()); (function() { var s2 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s2); s2.style.position = 'fixed'; s2.style.top = '' + s2ypos + 'px'; s2.style.left = '' + s2xpos + 'px'; s2.style.margin = '0px'; s2.style.width = '' + s2width + 'px'; s2.style.height = '' + s2height + 'px'; s2.style.zIndex = 10000; s2.style.opacity = 1; s2.style.color = 'black'; s2.style.backgroundColor = 'green'; s2.style.paddingTop = '5px'; s2.style.border = '3px solid black'; s2.style.textAlign = 'center'; s2.id = 's2'; s2.style.display = 'block'; }()); (function() { var s3 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s3); s3.style.position = 'fixed'; s3.style.top = '' + s3ypos + 'px'; s3.style.left = '' + s3xpos + 'px'; s3.style.margin = '0px'; s3.style.width = '' + s3width + 'px'; s3.style.height = '' + s3height + 'px'; s3.style.zIndex = 10000; s3.style.opacity = 1; s3.style.color = 'black'; s3.style.backgroundColor = 'green'; s3.style.paddingTop = '5px'; s3.style.border = '3px solid black'; s3.style.textAlign = 'center'; s3.id = 's3'; s3.style.display = 'block'; }()); (function() { var s7 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s7); s7.style.position = 'fixed'; s7.style.top = '' + s7ypos + 'px'; s7.style.left = '' + s7xpos + 'px'; s7.style.margin = '0px'; s7.style.width = '' + s7width + 'px'; s7.style.height = '' + s7height + 'px'; s7.style.zIndex = 10000; s7.style.opacity = 1; s7.style.color = 'black'; s7.style.backgroundColor = 'orange'; s7.style.paddingTop = '5px'; s7.style.border = '3px solid black'; s7.style.textAlign = 'center'; s7.id = 's7'; s7.style.display = 'block'; }()); (function() { var s8 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s8); s8.style.position = 'fixed'; s8.style.top = '' + s8ypos + 'px'; s8.style.left = '' + s8xpos + 'px'; s8.style.margin = '0px'; s8.style.width = '' + s8width + 'px'; s8.style.height = '' + s8height + 'px'; s8.style.zIndex = 10000; s8.style.opacity = 1; s8.style.color = 'black'; s8.style.backgroundColor = 'orange'; s8.style.paddingTop = '5px'; s8.style.border = '3px solid black'; s8.style.textAlign = 'center'; s8.id = 's8'; s8.style.display = 'block'; }()); (function() { var s9 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s9); s9.style.position = 'fixed'; s9.style.top = '' + s9ypos + 'px'; s9.style.left = '' + s9xpos + 'px'; s9.style.margin = '0px'; s9.style.width = '' + s9width + 'px'; s9.style.height = '' + s9height + 'px'; s9.style.zIndex = 10000; s9.style.opacity = 1; s9.style.color = 'black'; s9.style.backgroundColor = 'orange'; s9.style.paddingTop = '5px'; s9.style.border = '3px solid black'; s9.style.textAlign = 'center'; s9.id = 's9'; s9.style.display = 'block'; }()); (function() { var s6 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s6); s6.style.position = 'fixed'; s6.style.top = '' + s6ypos + 'px'; s6.style.left = '' + s6xpos + 'px'; s6.style.margin = '0px'; s6.style.width = '' + s6width + 'px'; s6.style.height = '' + s6height + 'px'; s6.style.zIndex = 10000; s6.style.opacity = 1; s6.style.color = 'black'; s6.style.backgroundColor = 'orange'; s6.style.paddingTop = '5px'; s6.style.border = '3px solid black'; s6.style.textAlign = 'center'; s6.id = 's6'; s6.style.display = 'block'; }()); (function() { var s5 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s5); s5.style.position = 'fixed'; s5.style.top = '' + s5ypos + 'px'; s5.style.left = '' + s5xpos + 'px'; s5.style.margin = '0px'; s5.style.width = '' + s5width + 'px'; s5.style.height = '' + s5height + 'px'; s5.style.zIndex = 10000; s5.style.opacity = 1; s5.style.color = 'black'; s5.style.backgroundColor = 'orange'; s5.style.paddingTop = '5px'; s5.style.border = '3px solid black'; s5.style.textAlign = 'center'; s5.id = 's5'; s5.style.display = 'block'; }()); (function() { var s4 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s4); s4.style.position = 'fixed'; s4.style.top = '' + s4ypos + 'px'; s4.style.left = '' + s4xpos + 'px'; s4.style.margin = '0px'; s4.style.width = '' + s4width + 'px'; s4.style.height = '' + s4height + 'px'; s4.style.zIndex = 10000; s4.style.opacity = 1; s4.style.color = 'black'; s4.style.backgroundColor = 'orange'; s4.style.paddingTop = '5px'; s4.style.border = '3px solid black'; s4.style.textAlign = 'center'; s4.id = 's4'; s4.style.display = 'block'; }()); (function() { var s10 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s10); s10.style.position = 'fixed'; s10.style.top = '' + s10ypos + 'px'; s10.style.left = '' + s10xpos + 'px'; s10.style.margin = '0px'; s10.style.width = '' + s10width + 'px'; s10.style.height = '' + s10height + 'px'; s10.style.zIndex = 10000; s10.style.opacity = 1; s10.style.color = 'black'; s10.style.backgroundColor = 'orange'; s10.style.paddingTop = '5px'; s10.style.border = '3px solid black'; s10.style.textAlign = 'center'; s10.id = 's10'; s10.style.display = 'block'; }()); (function() { var s11 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s11); s11.style.position = 'fixed'; s11.style.top = '' + s11ypos + 'px'; s11.style.left = '' + s11xpos + 'px'; s11.style.margin = '0px'; s11.style.width = '' + s11width + 'px'; s11.style.height = '' + s11height + 'px'; s11.style.zIndex = 10000; s11.style.opacity = 1; s11.style.color = 'black'; s11.style.backgroundColor = 'orange'; s11.style.paddingTop = '5px'; s11.style.border = '3px solid black'; s11.style.textAlign = 'center'; s11.id = 's11'; s8.style.display = 'block'; }()); (function() { var s12 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(s12); s12.style.position = 'fixed'; s12.style.top = '' + s12ypos + 'px'; s12.style.left = '' + s12xpos + 'px'; s12.style.margin = '0px'; s12.style.width = '' + s12width + 'px'; s12.style.height = '' + s12height + 'px'; s12.style.zIndex = 10000; s12.style.opacity = 1; s12.style.color = 'black'; s12.style.backgroundColor = 'orange'; s12.style.paddingTop = '5px'; s12.style.border = '3px solid black'; s12.style.textAlign = 'center'; s12.id = 's12'; s12.style.display = 'block'; }()); function moveball() { if (ballchangex == 1) { ballxpos = ballxpos + ballspeed; ball.style.top = '' + ballypos + 'px'; ball.style.left = '' + ballxpos + 'px'; } if (ballchangey == 1) { ballypos = ballypos + ballspeed; ball.style.top = '' + ballypos + 'px'; ball.style.left = '' + ballxpos + 'px'; } if (ballchangex == -1) { ballxpos = ballxpos - ballspeed; ball.style.top = '' + ballypos + 'px'; ball.style.left = '' + ballxpos + 'px'; } if (ballchangey == -1) { ballypos = ballypos - ballspeed; ball.style.top = '' + ballypos + 'px'; ball.style.left = '' + ballxpos + 'px'; } } function bounce() { if (ballypos >= height - 50) { ballxpos = -9999999999999999999; ballypos = -9999999999999999999999999; ballchangex = 0; ballchangey = 0; clearInterval(bounce); clearInterval(moveplayer); clearInterval(moveball); clearInterval(colliding); alert(\"game over. your score was \" + score + \".\"); window.location.reload(1); s1.parentNode.removeChild(s1); s1width = 0; s1height = 0; s1xpos = -999999; s1ypos = -999999; s2.parentNode.removeChild(s2); s2width = 0; s2height = 0; s2xpos = -999999; s2ypos = -999999; s3.parentNode.removeChild(s3); s3width = 0; s3height = 0; s3xpos = -999999; s3ypos = -999999; s4.parentNode.removeChild(s4); s4width = 0; s4height = 0; s4xpos = -999999; s4ypos = -999999; s5.parentNode.removeChild(s5); s5width = 0; s5height = 0; s5xpos = -999999; s5ypos = -999999; s6.parentNode.removeChild(s6); s6width = 0; s6height = 0; s6xpos = -999999; s6ypos = -999999; s7.parentNode.removeChild(s7); s7width = 0; s7height = 0; s7xpos = -999999; s7ypos = -999999; s8.parentNode.removeChild(s8); s8width = 0; s8height = 0; s8xpos = -999999; s8ypos = -999999; s9.parentNode.removeChild(s9); s9width = 0; s9height = 0; s9xpos = -999999; s9ypos = -999999; s10.parentNode.removeChild(s10); s10width = 0; s10height = 0; s10xpos = -999999; s10ypos = -999999; s11.parentNode.removeChild(s11); s11width = 0; s11height = 0; s11xpos = -999999; s11ypos = -999999; s12.parentNode.removeChild(s12); s12width = 0; s12height = 0; s12xpos = -999999; s12ypos = -999999; you.parentNode.removeChild(you); ball.parentNode.removeChild(ball); ballchangex = 0; ballchangey = 0; scorer.parentNode.removeChild(scorer); me.parentNode.removeChild(me); return; } if (ballxpos <= 0) { ballchangex = 1; } if (ballypos <= 0) { ballchangey = 1; } if (ballxpos >= width - 50) { ballchangex = -1; } } function moveplayer() { if (playerxmove == 1) { if (xpos + playerspeed >= 1366 - 200) {} else { xpos = xpos + playerspeed; you.style.top = '' + ypos + 'px'; you.style.left = '' + xpos + 'px'; } } if (playerxmove == -1) { if (xpos + playerspeed <= 0) {} else { xpos = xpos - playerspeed; you.style.top = '' + ypos + 'px'; you.style.left = '' + xpos + 'px'; } } } window.addEventListener(\"keydown\", function(event) { if (event.key == \"ArrowLeft\") { playerxmove = -1; } if (event.key == \"ArrowRight\") { playerxmove = 1; } }); window.addEventListener(\"keyup\", function(event) { if (event.key == \"ArrowLeft\") { playerxmove = 0; } if (event.key == \"ArrowRight\") { playerxmove = 0; } }); function colliding() { if (ballxpos < s1xpos + s1width && ballxpos + 50 > s1xpos && ballypos < s1ypos + s1height && ballypos + 50 > s1ypos) { score = score + 1; done = done + 1; s1.parentNode.removeChild(s1); s1width = 0; s1height = 0; s1xpos = -999999; s1ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s2xpos + s2width && ballxpos + 50 > s2xpos && ballypos < s2ypos + s2height && ballypos + 50 > s2ypos) { score = score + 1; done = done + 1; s2.parentNode.removeChild(s2); s2width = 0; s2height = 0; s2xpos = -999999; s2ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s3xpos + s3width && ballxpos + 50 > s3xpos && ballypos < s3ypos + s3height && ballypos + 50 > s3ypos) { score = score + 1; done = done + 1; s3.parentNode.removeChild(s3); s3width = 0; s3height = 0; s3xpos = -999999; s3ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s4xpos + s4width && ballxpos + 50 > s4xpos && ballypos < s4ypos + s4height && ballypos + 50 > s4ypos) { score = score + 1; done = done + 1; s4.parentNode.removeChild(s4); s4width = 0; s4height = 0; s4xpos = -999999; s4ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s5xpos + s5width && ballxpos + 50 > s5xpos && ballypos < s5ypos + s5height && ballypos + 50 > s5ypos) { score = score + 1; done = done + 1; s5.parentNode.removeChild(s5); s5width = 0; s5height = 0; s5xpos = -999999; s5ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s6xpos + s6width && ballxpos + 50 > s6xpos && ballypos < s6ypos + s6height && ballypos + 50 > s6ypos) { score = score + 1; done = done + 1; s6.parentNode.removeChild(s6); s6width = 0; s6height = 0; s6xpos = -999999; s6ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s7xpos + s7width && ballxpos + 50 > s7xpos && ballypos < s7ypos + s7height && ballypos + 50 > s7ypos) { score = score + 1; done = done + 1; s7.parentNode.removeChild(s7); s7width = 0; s7height = 0; s7xpos = -999999; s7ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s8xpos + s8width && ballxpos + 50 > s8xpos && ballypos < s8ypos + s8height && ballypos + 50 > s8ypos) { score = score + 1; done = done + 1; s8.parentNode.removeChild(s8); s8width = 0; s8height = 0; s8xpos = -999999; s8ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s9xpos + s9width && ballxpos + 50 > s9xpos && ballypos < s9ypos + s9height && ballypos + 50 > s9ypos) { score = score + 1; done = done + 1; s9.parentNode.removeChild(s9); s9width = 0; s9height = 0; s9xpos = -999999; s9ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s12xpos + s12width && ballxpos + 50 > s12xpos && ballypos < s12ypos + s12height && ballypos + 50 > s12ypos) { score = score + 1; done = done + 1; s12.parentNode.removeChild(s12); s12width = 0; s12height = 0; s12xpos = -999999; s12ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s11xpos + s11width && ballxpos + 50 > s11xpos && ballypos < s11ypos + s11height && ballypos + 50 > s11ypos) { score = score + 1; done = done + 1; s11.parentNode.removeChild(s11); s11width = 0; s11height = 0; s11xpos = -999999; s11ypos = -999999; ballchangey = ballchangey * -1; } if (ballxpos < s10xpos + s10width && ballxpos + 50 > s10xpos && ballypos < s10ypos + s10height && ballypos + 50 > s10ypos) { score = score + 1; done = done + 1; s10.parentNode.removeChild(s10); s10width = 0; s10height = 0; s10xpos = -999999; s10ypos = -999999; ballchangey = ballchangey * -1; } scorer.innerText = 'score: ' + score + ''; } setInterval(colliding, 5); setInterval(moveball, 15); setInterval(bounce, 3); setInterval(moveplayer, 15); } start(); function next() { if (done >= 12) { start(); done = 0; } } function hit() { if (xpos < ballxpos + 50 && xpos + 200 > ballxpos && ypos < ballypos + 50 && ypos + 30 > ballypos) { if (xpos+35>ballxpos){ ballchangex = -1; } if (xpos+165<ballxpos){ ballchangex = 1; } ballchangey = -1; } } setInterval(next, 2); setInterval(hit, 2);","Number Guesser":"javascript:var x=0;alert(\"by dragonmaster73101-dragonmaster731012 on github\");alert(\"--GUESS THE NUMBER-- rules: guess a number between or equal to 1 and 20\");function getRandomNumberBetween(min,max){ return Math.floor(Math.random()*(max-min+1)+min); };a=getRandomNumberBetween(1,20);while (true){v=prompt(\"What number do you guess?\");if (v==a){x=x+1;alert(\"You got it! you got it \"+x+\" try!\");break} else if (v>20){alert(\"please guess a number between or equal to 1 and 20.\")} else if (v<1){alert(\"please guess a number between or equal to 1 and 20.\")} else if (v>a){x=x+1;alert(\"too high.\")} else if (v<a){x=x+1;alert(\"too low.\")}}","Glitch":"javascript:(function(){function c(){return\"#\"+Math.floor(16777215*Math.random()).toString(16)}function r(e){return Math.floor(Math.random()*e)+1}function l(e){e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}var d=document;d.head.innerHTML=\"<style>*{margin:0; overflow:hidden; padding:0;overflow:hidden;} div{  transform-origin: 50% 50%; width:100%; height:1px; position:relative; z-index:1;} <\/style>\",d.body.innerHTML=\"\";var w=window.screen.availHeight;for(d.body.addEventListener(\"click\",function(){l(d.documentElement)}),i=0;w>=i;i++){var z=d.createElement(\"div\");z.id=\"b\"+i,z.style.backgroundColor=c(),d.body.appendChild(z)}setInterval(function(){for(var e=0;10>e;e++)d.getElementById(\"b\"+r(w)).style.backgroundColor=c(),d.getElementById(\"b\"+r(w)).style.height=r(4)+\"px\",d.body.style.backgroundColor=c(),d.body.style.transform=r(256)>128?\"scale(3) rotate(\"+r(35)+\"deg)\":\"rotate(0deg) scale(1)\";window.scrollTo(0,document.body.scrollHeight)},10),setInterval(function(){window.scrollTo(0,0)},50);})()","Snow":"javascript: (t => {function i() {this.D = function() {const t = h.atan(this.i \/ this.d);l.save(), l.translate(this.b, this.a), l.rotate(-t), l.scale(this.e, this.e * h.max(1, h.pow(this.j, .7) \/ 15)), l.drawImage(m, -v \/ 2, -v \/ 2), l.restore()}}window;const h = Math,r = h.random,a = document,o = Date.now;e = (t => {l.clearRect(0, 0, _, f), l.fill(), requestAnimationFrame(e);const i = .001 * y.et;y.r();const s = L.et * g;for (var n = 0; n < C.length; ++n) {const t = C[n];t.i = h.sin(s + t.g) * t.h, t.j = h.sqrt(t.i * t.i + t.f), t.a += t.d * i, t.b += t.i * i, t.a > w && (t.a = -u), t.b > b && (t.b = -u), t.b < -u && (t.b = b), t.D()}}), s = (t => {for (var e = 0; e < p; ++e) C[e].a = r() * (f + u), C[e].b = r() * _}), n = (t => {c.width = _ = innerWidth, c.height = f = innerHeight, w = f + u, b = _ + u, s()});class d {constructor(t, e = !0) {this._ts = o(), this._p = !0, this._pa = o(), this.d = t, e && this.s()}get et() {return this.ip ? this._pa - this._ts : o() - this._ts}get rt() {return h.max(0, this.d - this.et)}get ip() {return this._p}get ic() {return this.et >= this.d}s() {return this._ts = o() - this.et, this._p = !1, this}r() {return this._pa = this._ts = o(), this}p() {return this._p = !0, this._pa = o(), this}st() {return this._p = !0, this}}const c = a.createElement(\"canvas\");H = c.style, H.position = \"fixed\", H.left = 0, H.top = 0, H.width = \"100vw\", H.height = \"100vh\", H.zIndex = \"100000\", H.pointerEvents = \"none\", a.body.insertBefore(c, a.body.children[0]);const l = c.getContext(\"2d\"),p = 300,g = 5e-4,u = 20;let _ = c.width = innerWidth,f = c.height = innerHeight,w = f + u,b = _ + u;const v = 15.2,m = a.createElement(\"canvas\"),E = m.getContext(\"2d\"),x = E.createRadialGradient(7.6, 7.6, 0, 7.6, 7.6, 7.6);x.addColorStop(0, \"hsla(255,255%,255%,1)\"), x.addColorStop(1, \"hsla(255,255%,255%,0)\"), E.fillStyle = x, E.fillRect(0, 0, v, v);let y = new d(0, !0),C = [],L = new d(0, !0);for (var j = 0; j < p; ++j) {const t = new i;t.a = r() * (f + u), t.b = r() * _, t.c = 1 * (3 * r() + .8), t.d = .1 * h.pow(t.c, 2.5) * 50 * (2 * r() + 1), t.d = t.d < 65 ? 65 : t.d, t.e = t.c \/ 7.6, t.f = t.d * t.d, t.g = r() * h.PI \/ 1.3, t.h = 15 * t.c, t.i = 0, t.j = 0, C.push(t)}s(), EL = a.addEventListener, EL(\"visibilitychange\", () => setTimeout(n, 100), !1), EL(\"resize\", n, !1), e()})()","Edit Page":"document.body.contentEditable = \"true\"; document.designMode = \"on\"","Color":"javascript:(()=>{const s=document.documentElement.style;s.backgroundColor='black';s.filter='invert(100%)';})();void 0;","Clear All":"window.location.reload();","Web Destroyer":"javascript:var KICKASSVERSION='2.0';var s = document.createElement('script');s.type='text\/javascript';document.body.appendChild(s);s.src='\/\/hi.kickassapp.com\/kickass.js';void(0);","Coin Clicker":"javascript:alert(\"Coin Clicker. rules: click the coins as fast as bossible before the time runs out! errors: sorry, there is a bug where a coin appears and cannot be clicked. Im trying to fix that. if it happens, just start over.\"); var x=0; var points=0; var timer=31; var timermax=31; var op='block'; (function () { var score = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(score); score.style.position = 'fixed'; score.style.top = '350px'; score.style.left = '0px'; score.style.margin = '10px'; score.style.paddingTop = '0px'; score.style.width = '150px'; score.style.height = '30px'; score.style.zIndex = 10000; score.style.opacity = 1; score.style.color = 'black'; score.style.backgroundColor = 'white'; score.style.border = '5px solid black'; score.style.textAlign = 'center'; score.id = 'score'; score.style.display = op; score.innerText = 'score: '+points+''; }()); (function () { var me = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(me); me.style.position = 'fixed'; me.style.top = '390px'; me.style.left = '0px'; me.style.margin = '10px'; me.style.paddingTop = '0px'; me.style.width = '340px'; me.style.height = '30px'; me.style.zIndex = 10000; me.style.opacity = 1; me.style.color = 'black'; me.style.backgroundColor = 'white'; me.style.border = '5px solid black'; me.style.textAlign = 'center'; me.id = 'me'; me.style.display = op; me.innerText = 'by dragonmaster73101'; document.getElementById('me').addEventListener('click', function() { window.open(\"https:\/\/github.com\/dragon731012\"); }); }()); (function () { var elem = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(elem); elem.style.position = 'fixed'; elem.style.top = '0px'; elem.style.left = '0px'; elem.style.margin = '10px'; elem.style.paddingTop = '10px'; elem.style.width = '340px'; elem.style.height = '340px'; elem.style.zIndex = 10000; elem.style.opacity = 1; elem.style.color = 'green'; elem.style.backgroundColor = 'green'; elem.style.border = '0px solid white'; elem.style.textAlign = 'center'; elem.id = 'myTimer'; elem.style.display = op; }()); function mole(x,y){ (function () { var elem = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(elem); elem.style.position = 'fixed'; elem.style.top = ''+y+'px'; elem.style.left = ''+x+'px'; elem.style.margin = '10px'; elem.style.paddingTop = '0px'; elem.style.width = '40px'; elem.style.height = '40px'; elem.style.zIndex = 10000; elem.style.opacity = 1; elem.style.color = 'yellow'; elem.style.backgroundColor = 'yellow'; elem.style.border = '0px solid white'; elem.style.textAlign = 'center'; elem.style.cursor = 'pointer'; elem.id = 'coin'+x+''; elem.style.display = op; document.getElementById('coin'+x+'').addEventListener('click', function() { points=points+1; timermax=timermax-2; var timer=timermax; if (timermax<3){ var timermax=2; } makecoin(); elem.style.left='-99999999999999999999999999999999999px'; score.innerText = 'score: '+points+''; }); x=x+1; }()); } function makecoin(){ var rx=Math.floor(Math.random()*(300-0+1)+0); var ry=Math.floor(Math.random()*(300-0+1)+0); mole(rx,ry); } function check(){ (function(){ var time = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(time); timer=timer-1; if (timer<0){ op='none'; alert(\"game over. your score was \"+points+\".\"); clearInterval(check); window.location.reload(1); timer=99999999999999999999999999999999999; } time.style.position = 'fixed'; time.style.top = '350px'; time.style.left = '160px'; time.style.margin = '10px'; time.style.paddingTop = '0px'; time.style.width = '180px'; time.style.height = '30px'; time.style.zIndex = 10000; time.style.opacity = 1; time.style.color = 'black'; time.style.backgroundColor = 'white'; time.style.border = '5px solid black'; time.style.textAlign = 'center'; time.id = 'time'; time.style.display = op; time.innerText = 'timer: '+timer+''; }()); } makecoin(); setInterval(check,1000);","Pong":"javascript:(function(){var me=document.createElement('div');var body=document.getElementsByTagName('body')[0];body.appendChild(me);me.style.position='fixed';me.style.bottom='0px';me.style.right='0px';me.style.margin='0px';me.style.paddingTop='0px';me.style.width='1366px';me.style.height='20px';me.style.zIndex=10000;me.style.opacity=0.8;me.style.color='white';me.style.backgroundColor='black';me.style.border='0px solid black';me.style.textAlign='center';me.style.cursor='pointer';me.id='me';me.style.display='circle';me.innerText='by dragonmaster73101';document.getElementById('me').addEventListener('click',function(){window.open('https:\/\/github.com\/dragon731012');});}()); var xmove=1; var startnum=Math.floor(Math.random()*(10-1+1)+1); startnum=startnum\/10; var ymove=startnum; var xpos=1366\/2; var ypos=665\/2; var ballspeed=3; var p1ypos=665\/2; var p1xpos=80; var p1ymove=0; var playerspeed=6; var p2ymove=0; var p2ypos=665\/2; var p2xpos=1366-80; var ailevel=400; (function () { var ball = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(ball); ball.style.position = 'fixed'; ball.style.top = ''+ypos+'px'; ball.style.left = ''+xpos+'px'; ball.style.margin = '0px'; ball.style.paddingTop = '10px'; ball.style.width = '30px'; ball.style.height = '30px'; ball.style.zIndex = 10000; ball.style.opacity = 1; ball.style.color = 'white'; ball.style.backgroundColor = 'white'; ball.style.textAlign = 'center'; ball.style.cursor = 'pointer'; ball.style.border = '2px solid black'; ball.id = 'ball'; ball.style.display = 'block'; ball.innerText = ''; }()); (function () { var p1 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(p1); p1.style.position = 'fixed'; p1.style.top = ''+p1ypos+'px'; p1.style.left = ''+p1xpos+'px'; p1.style.margin = '0px'; p1.style.paddingTop = '10px'; p1.style.width = '20px'; p1.style.height = '100px'; p1.style.zIndex = 10000; p1.style.opacity = 1; p1.style.color = 'white'; p1.style.backgroundColor = 'white'; p1.style.textAlign = 'center'; p1.style.cursor = 'pointer'; p1.style.border = '2px solid black'; p1.id = 'p1'; p1.style.display = 'block'; p1.innerText = ''; }()); (function () { var p2 = document.createElement('div'); var body = document.getElementsByTagName('body')[0]; body.appendChild(p2); p2.style.position = 'fixed'; p2.style.top = ''+p2ypos+'px'; p2.style.left = ''+p2xpos+'px'; p2.style.margin = '0px'; p2.style.paddingTop = '10px'; p2.style.width = '20px'; p2.style.height = '100px'; p2.style.zIndex = 10000; p2.style.opacity = 1; p2.style.color = 'white'; p2.style.backgroundColor = 'white'; p2.style.textAlign = 'center'; p2.style.cursor = 'pointer'; p2.style.border = '2px solid black'; p2.id = 'p2'; p2.style.display = 'block'; p2.innerText = ''; }()); function move(){ if (p2ymove==1){ if (p2ypos+playerspeed <= 565){ p2ypos=p2ypos+playerspeed; p2.style.top = ''+p2ypos+'px'; } } if (p2ymove==-1){ if (p2ypos-playerspeed >= 0){ p2ypos=p2ypos-playerspeed; p2.style.top = ''+p2ypos+'px'; } } if (p1ymove==1){ if (p1ypos+playerspeed <= 565){ p1ypos=p1ypos+playerspeed; p1.style.top = ''+p1ypos+'px'; } } if (p1ymove==-1){ if (p1ypos-playerspeed >= 0){ p1ypos=p1ypos-playerspeed; p1.style.top = ''+p1ypos+'px'; } } if (xmove==1){ xpos=xpos+ballspeed; ball.style.top = ''+ypos+'px'; ball.style.left = ''+xpos+'px'; } if (xmove==-1){ xpos=xpos-ballspeed; ball.style.top = ''+ypos+'px'; ball.style.left = ''+xpos+'px'; } if (ymove==-1){ ypos=ypos-ballspeed; ball.style.top = ''+ypos+'px'; ball.style.left = ''+xpos+'px'; } if (ymove==1){ ypos=ypos+ballspeed; ball.style.top = ''+ypos+'px'; ball.style.left = ''+xpos+'px'; } if (ymove>-1 && ymove<0){ ypos=ypos-ymove*3; ball.style.top = ''+ypos+'px'; ball.style.left = ''+xpos+'px'; } if (ymove<1 && ymove>0){ ypos=ypos-ymove*3; ball.style.top = ''+ypos+'px'; ball.style.left = ''+xpos+'px'; } } function bounce(){ if (xpos>=1336){ xpos=-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999; clearInterval(bounce); ball.parentNode.removeChild(ball); p1.parentNode.removeChild(p1); p2.parentNode.removeChild(p2); me.parentNode.removeChild(me); clearInterval(move); clearInterval(movep2); clearInterval(colliding); alert(\"game over. you win\"); } if (xpos<=0){ xpos=99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999; clearInterval(bounce); ball.parentNode.removeChild(ball); me.parentNode.removeChild(me); p1.parentNode.removeChild(p1); p2.parentNode.removeChild(p2); clearInterval(move); clearInterval(movep2); clearInterval(colliding); alert(\"game over. you lose\"); } if (ypos>=635){ ymove=ymove*-1; } if (ypos<=0){ ymove=ymove*-1; } } function colliding(){ if (xpos < p1xpos + 20 && xpos + 30 > p1xpos && ypos < p1ypos + 100 && ypos + 30 > p1ypos) { xmove=xmove*-1; ballspeed=ballspeed+0.5; } if (xpos < p2xpos + 20 && xpos + 30 > p2xpos && ypos < p2ypos + 100 && ypos + 30 > p2ypos) { xmove=xmove*-1; ballspeed=ballspeed+0.5; } } window.addEventListener(\"keydown\", function(event) { if (event.key == \"ArrowUp\") { p1ymove=-1; } }); window.addEventListener(\"keyup\", function(event) { if (event.key == \"ArrowUp\") { p1ymove=0; } }); window.addEventListener(\"keydown\", function(event) { if (event.key == \"ArrowDown\") { p1ymove=1; } }); window.addEventListener(\"keyup\", function(event) { if (event.key == \"ArrowDown\") { p1ymove=0; } }); function movep2(){ if (xpos>683){ if (ypos<p2ypos){ if (p2ypos != ypos){ p2ymove=-1; } } if (ypos>p2ypos){ if (p2ypos != ypos){ p2ymove=1; } } } if (xpos<=683){ p2ymove=0; } } setInterval(colliding,15); setInterval(move,15); setInterval(bounce,15); setInterval(movep2,5);","Snake":"javascript:Q=64;m=b=Q*Q;a=[P=l=u=d=p=S=w=0];u=89;f=(h=j=t=(b+Q)\/2)-1;(B=(D=document).body).appendChild(x=D.createElement(\"p\"));(X=x.style).position=\"fixed\";X.left=X.top=0;X.background=\"#FFF\";x.innerHTML=\"<p><\/p><canvas>\";v=(s=x.childNodes)[0];(s=s[1]).width=s.height=5*Q;c=s.getContext(\"2d\"); onkeydown=onblur=F=function(e,g){g?a[f]?(w+=m,f=Math.random(l+=8)*(R=Q-2)*R|(u=0),F(f+=Q+1+2*(f\/R|0),g)):F(f):0>e?(l?--l:(y=t,t=a[t]-2,F(y)),S+=(w*=0.8)\/4,m=999\/(u++ +10),a[h+=[-1,-Q,1,Q][d=p]]?B.removeChild(x,alert(\"Game Over!\")):(F(h),F(e,j=h),v.innerHTML=P?(setTimeout(F,50,e,0),S|0):\"Press P To Start!\")):-e?(y=(a[e]=e<Q|e>=Q*Q-Q|!(e%Q)|e%Q==Q-1|2*(e==h))+(e==f),e==h&&(a[j]=2+h),c.fillStyle=\"hsl(\"+99*!a[e]+\",\"+2*m+\"%,\"+50*y+\"%)\",c.fillRect(e%Q*5,5*(e\/Q|0),5,5)):isNaN(y=e.keyCode-37)|43==y?(P=y&&!P)&&F(-1): p=!P|y&-4|!(y^2^d)?p:y;return!1};for(;--b;F(b));void F(-1);"}
